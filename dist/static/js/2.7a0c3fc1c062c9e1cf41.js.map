{"version":3,"sources":["webpack:///./src/utils/genUuid.js","webpack:///src/components/EvidenceForm.vue","webpack:///./src/components/EvidenceForm.vue?393d","webpack:///./src/components/EvidenceForm.vue","webpack:///src/components/EvidenceTabs.vue","webpack:///./src/components/EvidenceTabs.vue?bc5a","webpack:///./src/components/EvidenceTabs.vue","webpack:///src/components/EvidenceCategoryTabs.vue","webpack:///./src/components/EvidenceCategoryTabs.vue?9685","webpack:///./src/components/EvidenceCategoryTabs.vue","webpack:///src/modules/caseHandle/step3/step3.vue","webpack:///./src/modules/caseHandle/step3/step3.vue?90ab","webpack:///./src/modules/caseHandle/step3/step3.vue"],"names":["getUuid","len","radix","r","chars","split","uuid","i","length","Math","random","join","getPdfNameFromCopyActionCb","localClipboardData","EvidenceForm","props","data","extractSourceProperDisabled","labelPosition","currentOcrName","step3SharedStore","global_store","sharedState","state","name","computed","components","methods","getExtractSourceTxt","this","contentForm","evidenceExtractSource","ocrFileName","getIconClassName","url","indexOf","toLowerCase","switchToPdf","obj","ee","emit","ocrFileId","cateBelongLabel","_this","temp","lodash_default","a","filter","cateBelong","o","sectionId","cateBelongValue","sectionName","changeToEmptyCallbak","e","target","value","pasteCallback","stopPropagation","factConfirmEvidenceId","currentEvidenceId","originalFile","originalCateType","originalType","pageDes","sourceSort","findIndex","unshift","created","_this2","window","eventEmitter","events_default","unwatchInCreated","$watch","newVal","emitEventName","emitEventData","evidenceApproveContent","evidenceVerification","evidenceExtractContent","evidenceExtract","evidenceExtractTitle","caseMgtFactConfirmEvidenceSourceVoList","clone","evidenceFixedClassifyId","evidenceFixedClassifyName","evidenceClassifySort","evidenceSort","factConfirmId","deep","immediate","debounceEmitter","debounce","mounted","_this3","$refs","evidenceExtractInput","$el","addEventListener","currentFactId","currentEvidenceFixedClassifyId","setCurrentEvidenceIdAction","evidenceTitleCacheMap","unwatchInMounted","addListener","beforeDestroy","removeEventListener","destroyed","removeListener","components_EvidenceForm","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","label-position","model","label-width","label","clearable","filterable","allow-create","default-first-option","placeholder","callback","$$v","$set","expression","_l","item","key","sectionSort","_e","_v","placement","trigger","visible-arrow","popper-class","index","refInFor","on","click","$event","staticStyle","margin-right","aria-hidden","xlink:href","_s","slot","font-size","title","type","maxlength","rows","staticRenderFns","EvidenceTabs","closable","currentTabName","editableTabsList","__webpack_require__","normalizeComponent","ssrContext","validateEvidenceTabs","validEvidenceNum","forEach","push","addEvidenceTab","errorArr","$message","showClose","message","newTabName","maxBy","newEvidenceId","cateId","sortNum","cateName","locateTab","dataCopy","orderBy","initEvidenceData","currentIndex","selectGrandTab","tabInstance","removeGrandTab","targetName","tabs","activeName","tab","nextTab","_this4","oldVal","_this5","tempArr","$nextTick","$route","params","components_EvidenceTabs","tab-remove","tab-click","grandItem","right","font-weight","color","EvidenceCategoryTabs_evidenceFormUpdateCb","EvidenceCategoryTabs","tabPosition","EvidenceTabs_normalizeComponent","initData","caseMgtFactConfirmEvidenceVoList","setCurrentEvidenceFixedClassifyIdAction","triangleFlagDom","showTriangleFlag","querySelector","style","display","selectEvidenceCateTab","components_EvidenceCategoryTabs","tab-position","subItem","directives","rawName","src_components_EvidenceCategoryTabs","EvidenceCategoryTabs_normalizeComponent","caseMgtFactConfirmVoList","step3_evidenceFormUpdateCb","step3_deleteEvidenceTabEventCb","isInEvidenceList","list","id","bool","step3","caseObj","Object","required","checkIsSave","path","close","next","loading","hasSaved","getData","step3AllDatas","caseMgtEvidenceClassifyVoList","val","splice","setTimeout","v","idx","o1","assign","isArray","resolveInitData","then","resolveData","root","caseNumber","res","code","addTab","makeCaseMgtFactConfirmVoList","setHasSaved","msg","error","factFindingTitle","sort","basicInfo","factFindingContent","timer","setInterval","clearInterval","setCurrentFactIdAction","promise_default","resolve","reject","arr","subPromise","classifyId","classifyName","response","setEvidenceTitleCacheMapByKey","all","setCaseMgtEvidenceClassifyVoList","handleInputChange","setStep3AllDatas","compareSubmitDataWithInitData","$confirm","confirmButtonText","cancelButtonText","closeOnClickModal","center","saveFactConfirmList","undefined","catch","eDossier","$router","prev","_this6","selectTab","_this7","newFactID","removeTab","_this8","silent","_this9","caseMgtFactConfirmVoListCopy","cloneDeep","obj0","obj1","obj2","copy","o2","o3","clearConfirmList","_this10","isEqual","JSON","parse","stringify_default","step3_step3","margin-bottom","line-height","margin-top","change","size","step3_Component","step3_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/2.7a0c3fc1c062c9e1cf41.js","sourcesContent":["export function getUuid(len, radix) {\r\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(\r\n    ''\r\n  )\r\n  let uuid = []\r\n  let i\r\n  radix = radix || chars.length\r\n\r\n  if (len) {\r\n    // Compact form\r\n    for (i = 0; i < len; i++) uuid[i] = chars[0 | (Math.random() * radix)]\r\n  } else {\r\n    // rfc4122, version 4 form\r\n    var r\r\n\r\n    // rfc4122 requires these characters\r\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-'\r\n    uuid[14] = '4'\r\n\r\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n    // per rfc4122, sec. 4.1.5\r\n    for (i = 0; i < 36; i++) {\r\n      if (!uuid[i]) {\r\n        r = 0 | (Math.random() * 16)\r\n        uuid[i] = chars[i === 19 ? (r & 0x3) | 0x8 : r]\r\n      }\r\n    }\r\n  }\r\n\r\n  return uuid.join('')\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/genUuid.js","<template>\r\n<div class=\"evidence-item-content-wrap\">\r\n    <el-form ref=\"form\" :label-position=\"labelPosition\" :model=\"contentForm\" label-width=\"80px\">\r\n          <el-form-item label=\"证据所属类型\" v-if=\"contentForm.cateBelong.length\">\r\n              <el-select\r\n                :clearable=\"true\"\r\n                v-model=\"contentForm.cateBelongValue\"\r\n                filterable\r\n                allow-create\r\n                default-first-option\r\n                placeholder=\"\">\r\n                <el-option\r\n                  v-for=\"item in contentForm.cateBelong\"\r\n                  :key=\"item.sectionSort\"\r\n                  :label=\"item.sectionName\"\r\n                  :value=\"item.sectionId\">\r\n                </el-option>\r\n              </el-select>\r\n              </el-form-item>\r\n          <div class=\"div-form-item\">\r\n            <h3 class=\"h3-title\">\r\n            证据摘录\r\n            <el-popover placement=\"bottom-end\" trigger=\"hover\"  :visible-arrow=\"false\" popper-class=\"evidence-form-popper\" v-if=\"getExtractSourceTxt()\">\r\n              <ul class=\"extract-source-list\">\r\n              <li v-for=\"item in contentForm.evidenceExtractSource\" :key=\"item.index\" ref = \"list-item\" v-on:click=\"switchToPdf(item)\">\r\n                <svg class=\"icon\" aria-hidden=\"true\" style=\"margin-right:8px;\">\r\n                  <use :xlink:href=\"getIconClassName(item.originalFile)\"></use>\r\n              </svg><span>{{item.ocrFileName}}</span>\r\n              </li>\r\n              </ul>\r\n              <span slot=\"reference\" class=\"eidt-wrap\">\r\n                <em>摘录来源：</em>{{getExtractSourceTxt()}}\r\n                <i class=\"iconfont\" title=\"展开\" style=\"font-size:30px;\">&#xe6ec;</i>\r\n              </span>\r\n            </el-popover>\r\n          </h3>\r\n          <el-form-item label=\"\">\r\n            <el-input ref=\"evidenceExtractInput\" type=\"textarea\" maxlength=\"2048\" rows=\"15\" v-model=\"contentForm.evidenceExtract\"></el-input>\r\n          </el-form-item>\r\n          </div>\r\n\r\n          <div class=\"div-form-item\">\r\n            <h3 class=\"h3-title\">\r\n            证实\r\n            <br/>\r\n          </h3>\r\n          <el-form-item label=\"\">\r\n            <el-input type=\"textarea\" rows=\"5\" maxlength=\"2048\" v-model=\"contentForm.evidenceVerification\"></el-input>\r\n          </el-form-item>\r\n          </div>\r\n      </el-form>\r\n</div>\r\n</template>\r\n<script>\r\nimport EE from 'events'\r\nimport _ from 'lodash'\r\nimport { store as step3SharedStore } from '@/utils/global-store'\r\n\r\nlet getPdfNameFromCopyActionCb\r\nlet localClipboardData\r\nexport default {\r\n  props: ['contentForm'],\r\n  data() {\r\n    return {\r\n      // 是否启用显示proper\r\n      extractSourceProperDisabled: true,\r\n      labelPosition: 'top',\r\n      currentOcrName: '',\r\n      // 共享状态数据\r\n      step3SharedStore: step3SharedStore,\r\n      sharedState: step3SharedStore.state\r\n    }\r\n  },\r\n  name: 'evidenceForm',\r\n  computed: {\r\n    // getExtractSourceTxt: {\r\n    //   // getter\r\n    //   get: function() {\r\n    //     if (this.currentOcrName !== '') {\r\n    //       return this.currentOcrName\r\n    //     } else {\r\n    //       if (this.contentForm.evidenceExtractSource.length > 0) {\r\n    //         return this.contentForm.evidenceExtractSource[0].ocrFileName\r\n    //       } else {\r\n    //         return ''\r\n    //       }\r\n    //     }\r\n    //   },\r\n    //   // setter\r\n    //   set: function(newValue) {\r\n    //     console.log(newValue)\r\n    //     this.contentForm.evidenceExtractSource = []\r\n    //   }\r\n    // }\r\n  },\r\n  components: {},\r\n  methods: {\r\n    getExtractSourceTxt() {\r\n      if (this.currentOcrName !== '') {\r\n        return this.currentOcrName\r\n      } else {\r\n        if (this.contentForm.evidenceExtractSource.length > 0) {\r\n          return this.contentForm.evidenceExtractSource[0].ocrFileName\r\n        } else {\r\n          return ''\r\n        }\r\n      }\r\n    },\r\n    // 返回文件扩展名对应icon名称\r\n    getIconClassName(url) {\r\n      let extendName\r\n      if (url.indexOf('.') < 0) {\r\n        extendName = url.toLowerCase()\r\n      } else {\r\n        extendName = url.split('.')[1].toLowerCase()\r\n      }\r\n\r\n      switch (extendName) {\r\n        case 'pdf':\r\n          return '#icon-pdfwenjian'\r\n        case 'docx':\r\n          return '#icon-wordwenjian'\r\n        case 'doc':\r\n          return '#icon-wordwenjian'\r\n        case 'JPG':\r\n          return '#icon-tupianwenjian'\r\n        case 'jpg':\r\n          return '#icon-tupianwenjian'\r\n        case 'tif':\r\n          return '#icon-tupianwenjian'\r\n        case 'png':\r\n          return '#icon-tupianwenjian'\r\n        default:\r\n          return '#icon-tupianwenjian'\r\n      }\r\n    },\r\n    // 切换到对应的摘要所在pdf\r\n    switchToPdf(obj) {\r\n      this.currentOcrName = obj.ocrFileName\r\n      this.ee.emit('switchPdfByOcrfileIdEvent', obj.ocrFileId)\r\n    },\r\n    cateBelongLabel() {\r\n      let temp = _.filter(this.contentForm.cateBelong, o => {\r\n        return o.sectionId === this.contentForm.cateBelongValue\r\n      })\r\n\r\n      if (!temp.length) {\r\n        return this.contentForm.cateBelongValue\r\n      } else {\r\n        return temp[0].sectionName\r\n      }\r\n    },\r\n    changeToEmptyCallbak(e) {\r\n      if (e.target.value === '') {\r\n        this.currentOcrName = ''\r\n        this.contentForm.evidenceExtractSource = []\r\n      }\r\n    },\r\n    pasteCallback(e) {\r\n      e.stopPropagation()\r\n      if (!localClipboardData) {\r\n        return\r\n      }\r\n      if (\r\n        !(\r\n          this.contentForm.factConfirmEvidenceId ===\r\n          this.step3SharedStore.state.currentEvidenceId\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      let temp = {\r\n        ocrFileId: localClipboardData.ocrFileId * 1,\r\n        ocrFileName: localClipboardData.ocrFileName,\r\n        originalFile: localClipboardData.originalFile,\r\n        originalCateType: localClipboardData.originalCateType,\r\n        originalType: localClipboardData.originalType,\r\n        pageDes: '',\r\n        sourceSort: this.contentForm.evidenceExtractSource.length + 1\r\n      }\r\n      if (\r\n        _.findIndex(this.contentForm.evidenceExtractSource, o => {\r\n          return (\r\n            o.ocrFileName === localClipboardData.ocrFileName &&\r\n            o.originalCateType === localClipboardData.originalCateType &&\r\n            o.originalType === localClipboardData.originalType\r\n          )\r\n        }) < 0\r\n      ) {\r\n        //\r\n        this.contentForm.evidenceExtractSource.unshift(temp)\r\n      }\r\n      // 查看摘录来源个数\r\n      if (this.contentForm.evidenceExtractSource.length > 1) {\r\n        this.extractSourceProperDisabled = false\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 事件总线\r\n    if (window.eventEmitter) {\r\n      this.ee = window.eventEmitter\r\n    } else {\r\n      this.ee = window.eventEmitter = new EE()\r\n    }\r\n    // 设置监听\r\n    this.unwatchInCreated = this.$watch(\r\n      'contentForm',\r\n      newVal => {\r\n        this.emitEventName = 'evidenceFormUpdate'\r\n        this.emitEventData = {\r\n          evidenceApproveContent: newVal.evidenceVerification,\r\n          evidenceExtractContent: newVal.evidenceExtract,\r\n          evidenceExtractTitle: this.cateBelongLabel(),\r\n          caseMgtFactConfirmEvidenceSourceVoList: _.clone(\r\n            newVal.evidenceExtractSource\r\n          ),\r\n          evidenceFixedClassifyId: this.contentForm.evidenceFixedClassifyId,\r\n          evidenceFixedClassifyName: this.contentForm.evidenceFixedClassifyName,\r\n          evidenceClassifySort: this.contentForm.evidenceClassifySort,\r\n          evidenceSort: newVal.evidenceSort,\r\n          factConfirmId: this.contentForm.factConfirmId,\r\n          factConfirmEvidenceId: this.contentForm.factConfirmEvidenceId\r\n        }\r\n        this.ee.emit(this.emitEventName, this.emitEventData)\r\n      },\r\n      {\r\n        deep: true,\r\n        immediate: true\r\n      }\r\n    )\r\n    this.debounceEmitter = _.debounce(() => {\r\n      this.ee.emit(this.emitEventName, this.emitEventData)\r\n    }, 0)\r\n  },\r\n  mounted() {\r\n    // dom渲染完\r\n    this.$refs.evidenceExtractInput.$el.addEventListener(\r\n      'input',\r\n      this.changeToEmptyCallbak,\r\n      false\r\n    )\r\n    this.$refs.evidenceExtractInput.$el.addEventListener(\r\n      'paste',\r\n      this.pasteCallback,\r\n      false\r\n    )\r\n    if (\r\n      this.step3SharedStore.state.currentFactId ===\r\n      this.contentForm.factConfirmId\r\n    ) {\r\n      if (\r\n        this.step3SharedStore.state.currentEvidenceFixedClassifyId ===\r\n        this.contentForm.evidenceFixedClassifyId\r\n      ) {\r\n        this.step3SharedStore.setCurrentEvidenceIdAction(\r\n          this.contentForm.factConfirmEvidenceId\r\n        )\r\n      }\r\n    }\r\n\r\n    // 事件总线\r\n    if (window.eventEmitter) {\r\n      this.ee = window.eventEmitter\r\n    } else {\r\n      this.ee = window.eventEmitter = new EE()\r\n    }\r\n\r\n    // 初始化，查看摘录来源个数\r\n    if (this.contentForm.evidenceExtractSource.length > 1) {\r\n      this.extractSourceProperDisabled = false\r\n    }\r\n    this.contentForm.cateBelong = this.step3SharedStore.evidenceTitleCacheMap[\r\n      this.contentForm.evidenceFixedClassifyId\r\n    ]\r\n\r\n    if (typeof this.unwatchInCreated === 'function') {\r\n      this.unwatchInCreated()\r\n    }\r\n    // 设置监听\r\n    this.unwatchInMounted = this.$watch(\r\n      'contentForm',\r\n      newVal => {\r\n        this.emitEventName = 'evidenceFormUpdate'\r\n        this.emitEventData = {\r\n          evidenceApproveContent: newVal.evidenceVerification,\r\n          evidenceExtractContent: newVal.evidenceExtract,\r\n          evidenceExtractTitle: this.cateBelongLabel(),\r\n          caseMgtFactConfirmEvidenceSourceVoList: _.clone(\r\n            newVal.evidenceExtractSource\r\n          ),\r\n          evidenceFixedClassifyId: this.contentForm.evidenceFixedClassifyId,\r\n          evidenceFixedClassifyName: this.contentForm.evidenceFixedClassifyName,\r\n          evidenceClassifySort: this.contentForm.evidenceClassifySort,\r\n          evidenceSort: newVal.evidenceSort,\r\n          factConfirmId: this.contentForm.factConfirmId,\r\n          factConfirmEvidenceId: this.contentForm.factConfirmEvidenceId\r\n        }\r\n        this.ee.emit(this.emitEventName, this.emitEventData)\r\n      },\r\n      {\r\n        deep: true,\r\n        immediate: true\r\n      }\r\n    )\r\n    getPdfNameFromCopyActionCb = data => {\r\n      localClipboardData = data\r\n    }\r\n    this.ee.addListener('getPdfNameFromCopyAction', getPdfNameFromCopyActionCb)\r\n  },\r\n  beforeDestroy() {\r\n    this.$refs.evidenceExtractInput.$el.removeEventListener(\r\n      'paste',\r\n      this.pasteCallback,\r\n      false\r\n    )\r\n    this.$refs.evidenceExtractInput.$el.removeEventListener(\r\n      'input',\r\n      this.changeToEmptyCallbak,\r\n      false\r\n    )\r\n  },\r\n  destroyed() {\r\n    if (typeof this.unwatchInCreated === 'function') {\r\n      this.unwatchInMounted()\r\n    }\r\n\r\n    if (typeof this.unwatchInMounted === 'function') {\r\n      this.unwatchInMounted()\r\n    }\r\n\r\n    this.ee.removeListener(\r\n      'getPdfNameFromCopyAction',\r\n      getPdfNameFromCopyActionCb\r\n    )\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n// 证据摘录来源样式\r\n.eidt-wrap {\r\n  float: right;\r\n  line-height: 30px;\r\n  position: relative;\r\n  top: -5px;\r\n  padding-right: 30px;\r\n  color: #41a1f8;\r\n  cursor: pointer;\r\n  em {\r\n    font-style: normal;\r\n    color: #999;\r\n  }\r\n  i {\r\n    font-size: 30px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n  }\r\n}\r\n\r\nul.extract-source-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  li {\r\n    &:hover {\r\n      cursor: pointer;\r\n      i.iconfont {\r\n        visibility: visible;\r\n      }\r\n    }\r\n\r\n    i.iconfont {\r\n      color: #f05468;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.evidence-form-popper.el-popper {\r\n  padding: 0;\r\n  ul.extract-source-list {\r\n    li {\r\n      height: 32px;\r\n      line-height: 32px;\r\n      padding-left: 16px;\r\n      &:hover {\r\n        background-color: #e3eef9;\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.evidence-form-popper.el-popper[x-placement^='bottom'] {\r\n  margin-top: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/EvidenceForm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"evidence-item-content-wrap\"},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":_vm.labelPosition,\"model\":_vm.contentForm,\"label-width\":\"80px\"}},[(_vm.contentForm.cateBelong.length)?_c('el-form-item',{attrs:{\"label\":\"证据所属类型\"}},[_c('el-select',{attrs:{\"clearable\":true,\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"\"},model:{value:(_vm.contentForm.cateBelongValue),callback:function ($$v) {_vm.$set(_vm.contentForm, \"cateBelongValue\", $$v)},expression:\"contentForm.cateBelongValue\"}},_vm._l((_vm.contentForm.cateBelong),function(item){return _c('el-option',{key:item.sectionSort,attrs:{\"label\":item.sectionName,\"value\":item.sectionId}})}))],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"div-form-item\"},[_c('h3',{staticClass:\"h3-title\"},[_vm._v(\"\\r\\n            证据摘录\\r\\n            \"),(_vm.getExtractSourceTxt())?_c('el-popover',{attrs:{\"placement\":\"bottom-end\",\"trigger\":\"hover\",\"visible-arrow\":false,\"popper-class\":\"evidence-form-popper\"}},[_c('ul',{staticClass:\"extract-source-list\"},_vm._l((_vm.contentForm.evidenceExtractSource),function(item){return _c('li',{key:item.index,ref:\"list-item\",refInFor:true,on:{\"click\":function($event){_vm.switchToPdf(item)}}},[_c('svg',{staticClass:\"icon\",staticStyle:{\"margin-right\":\"8px\"},attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":_vm.getIconClassName(item.originalFile)}})]),_c('span',[_vm._v(_vm._s(item.ocrFileName))])])})),_vm._v(\" \"),_c('span',{staticClass:\"eidt-wrap\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_c('em',[_vm._v(\"摘录来源：\")]),_vm._v(_vm._s(_vm.getExtractSourceTxt())+\"\\r\\n                \"),_c('i',{staticClass:\"iconfont\",staticStyle:{\"font-size\":\"30px\"},attrs:{\"title\":\"展开\"}},[_vm._v(\"\")])])]):_vm._e()],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-input',{ref:\"evidenceExtractInput\",attrs:{\"type\":\"textarea\",\"maxlength\":\"2048\",\"rows\":\"15\"},model:{value:(_vm.contentForm.evidenceExtract),callback:function ($$v) {_vm.$set(_vm.contentForm, \"evidenceExtract\", $$v)},expression:\"contentForm.evidenceExtract\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"div-form-item\"},[_c('h3',{staticClass:\"h3-title\"},[_vm._v(\"\\r\\n            证实\\r\\n            \"),_c('br')]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":\"5\",\"maxlength\":\"2048\"},model:{value:(_vm.contentForm.evidenceVerification),callback:function ($$v) {_vm.$set(_vm.contentForm, \"evidenceVerification\", $$v)},expression:\"contentForm.evidenceVerification\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-03b6ca2b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/EvidenceForm.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03b6ca2b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./EvidenceForm.vue\")\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03b6ca2b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=1!./EvidenceForm.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03b6ca2b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./EvidenceForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-03b6ca2b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/EvidenceForm.vue\n// module id = null\n// module chunks = ","<template>\r\n<div>\r\n<!--事实里面嵌套的证据tabs begin-->\r\n          <el-tabs class=\"evidence-item-tabs-wrap\" ref=\"evidenceTabDom\" :closable=\"closable\" v-model=\"currentTabName\" @tab-remove=\"removeGrandTab\" @tab-click=\"selectGrandTab\">\r\n              <el-tab-pane\r\n        v-for=\"grandItem in editableTabsList\"\r\n        :key=\"grandItem.name\"\r\n        :label=\"grandItem.title\"\r\n        :name=\"grandItem.name\"\r\n      >\r\n      <!-- 证据新增|编辑 组件-->\r\n      <!--表单占位-->\r\n      <evidence-form :contentForm=\"grandItem.contentForm\"></evidence-form>\r\n      </el-tab-pane>\r\n          </el-tabs>\r\n          <el-button class=\"addBtn\" type=\"text\" @click=\"addEvidenceTab()\" style=\"right:10px;\"><i class=\"iconfont\" title=\"新增证据\" style=\"font-size:16px;font-weight:bold;color:#42a0f8;\">&#xe6ed;</i></el-button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nimport EvidenceForm from './EvidenceForm.vue'\r\nimport { getUuid } from '@/utils/genUuid'\r\nimport EE from 'events'\r\nimport { store as step3SharedStore } from '@/utils/global-store'\r\n\r\nexport default {\r\n  props: ['initEvidenceData', 'cateId', 'cateName', 'factConfirmId', 'sortNum'],\r\n  data() {\r\n    return {\r\n      // 是否可以关闭tab\r\n      closable: false,\r\n      currentTabName: 1 + '',\r\n      labelPosition: 'top',\r\n      editableTabsList: [],\r\n      // 共享状态数据\r\n      step3SharedStore: step3SharedStore,\r\n      sharedState: step3SharedStore.state\r\n    }\r\n  },\r\n  name: '',\r\n  computed: {},\r\n  components: {\r\n    EvidenceForm\r\n  },\r\n  methods: {\r\n    // 判断是否展示tab上的三角符号，依据是大类下面有没有有效的证据\r\n    validateEvidenceTabs(data) {\r\n      let validEvidenceNum = []\r\n      if (data.length >= 1) {\r\n        _.forEach(data, (value, key) => {\r\n          if (\r\n            value.contentForm.evidenceVerification === '' &&\r\n            value.contentForm.evidenceExtract === '' &&\r\n            value.contentForm.cateBelongValue === ''\r\n          ) {\r\n            validEvidenceNum.push(value.title)\r\n          }\r\n        })\r\n      }\r\n      return validEvidenceNum\r\n    },\r\n    // 新增tab\r\n    addEvidenceTab() {\r\n      let errorArr = this.validateEvidenceTabs(this.editableTabsList)\r\n      if (errorArr.length) {\r\n        this.$message({\r\n          showClose: false,\r\n          message: `${errorArr.join(',')}没有填写完,不能新建下一个证据！`,\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      }\r\n\r\n      this.closable = false\r\n      if (this.editableTabsList.length > 0) {\r\n        this.closable = true\r\n      }\r\n      let newTabName = this.editableTabsList.length + 1\r\n\r\n      if (this.editableTabsList.length === 0) {\r\n        newTabName = this.editableTabsList.length + 1\r\n      } else {\r\n        newTabName =\r\n          _.maxBy(this.editableTabsList, o => {\r\n            return o.name * 1\r\n          })['name'] *\r\n            1 +\r\n          1\r\n      }\r\n\r\n      let newEvidenceId = 'E' + getUuid(8, 16)\r\n      this.editableTabsList.push({\r\n        title: '证据' + newTabName,\r\n        name: newTabName + '',\r\n        contentForm: {\r\n          // 调取cateBelongValue种类列表需要\r\n          evidenceFixedClassifyId: this.cateId,\r\n          // 固定分类编号\r\n          evidenceClassifySort: this.sortNum,\r\n          // 证据种类\r\n          cateBelongValue: '',\r\n          cateBelong: [],\r\n          // 摘录\r\n          evidenceExtract: '',\r\n          // 摘录来源\r\n          evidenceExtractSource: [],\r\n          // 证实\r\n          evidenceVerification: '',\r\n          // 排序编号\r\n          evidenceSort: newTabName,\r\n          // 属于证据种类名称\r\n          evidenceFixedClassifyName: this.cateName,\r\n          // 新建的没有id\r\n          factConfirmId: this.factConfirmId,\r\n          // 证据id\r\n          factConfirmEvidenceId: newEvidenceId\r\n        }\r\n      })\r\n      this.currentTabName = newTabName + ''\r\n      // 手工增加tab时候/程序当做api直接调用的时候 设置当前证据id\r\n      this.step3SharedStore.setCurrentEvidenceIdAction(newEvidenceId)\r\n\r\n      // bug4024\r\n      // 重排,仅修改title文字\r\n      _.forEach(this.editableTabsList, (value, index) => {\r\n        this.editableTabsList[index].title = `证据${index + 1}`\r\n      })\r\n    },\r\n\r\n    locateTab(factConfirmEvidenceId) {\r\n      let dataCopy = _.orderBy(\r\n        this.initEvidenceData,\r\n        [\r\n          function(o) {\r\n            return o.evidenceSort * 1\r\n          }\r\n        ],\r\n        ['asc']\r\n      )\r\n      let currentIndex = _.findIndex(dataCopy, o => {\r\n        return o.factConfirmEvidenceId === factConfirmEvidenceId\r\n      })\r\n\r\n      if (currentIndex >= 0) {\r\n        this.currentTabName = dataCopy[currentIndex].evidenceSort + ''\r\n        this.step3SharedStore.setCurrentEvidenceIdAction(factConfirmEvidenceId)\r\n      }\r\n    },\r\n    // 选中tab\r\n    selectGrandTab(tabInstance) {\r\n      this.currentTabName = tabInstance.name\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === this.currentTabName\r\n      })\r\n      // 初始化当前证据\r\n      let factConfirmEvidenceId = this.editableTabsList[currentIndex]\r\n        .contentForm.factConfirmEvidenceId\r\n      this.step3SharedStore.setCurrentEvidenceIdAction(factConfirmEvidenceId)\r\n    },\r\n    // 删除tab\r\n    removeGrandTab(targetName) {\r\n      let tabs = this.editableTabsList\r\n      if (tabs.length === 2) {\r\n        this.closable = false\r\n      }\r\n      let activeName = this.currentTabName\r\n      if (activeName === targetName) {\r\n        tabs.forEach((tab, index) => {\r\n          if (tab.name === targetName) {\r\n            let nextTab = tabs[index + 1] || tabs[index - 1]\r\n            if (nextTab) {\r\n              activeName = nextTab.name\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      this.currentTabName = activeName\r\n      // 设置当前证据id\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === targetName\r\n      })\r\n      let factConfirmEvidenceId = this.editableTabsList[currentIndex]\r\n        .contentForm.factConfirmEvidenceId\r\n      this.step3SharedStore.setCurrentEvidenceIdAction(factConfirmEvidenceId)\r\n\r\n      // 出发删除事件通知\r\n      this.ee.emit('deleteEvidenceTabEvent', {\r\n        factConfirmId: this.factConfirmId,\r\n        evidenceSort: this.editableTabsList[currentIndex].name,\r\n        factConfirmEvidenceId: this.editableTabsList[currentIndex].contentForm\r\n          .factConfirmEvidenceId,\r\n        evidenceFixedClassifyId: this.cateId\r\n      })\r\n\r\n      this.editableTabsList = tabs.filter(tab => tab.name !== targetName)\r\n\r\n      // bug4024\r\n      // 重排\r\n      _.forEach(this.editableTabsList, (value, index) => {\r\n        this.editableTabsList[index].title = `证据${index + 1}`\r\n      })\r\n    }\r\n  },\r\n  destroyed() {\r\n    if (this.unwatchInCreated) this.unwatchInCreated()\r\n    if (this.unwatchInMounted) this.unwatchInMounted()\r\n  },\r\n  created() {\r\n    // 设置监听\r\n    this.unwatchInCreated = this.$watch(\r\n      'sharedState',\r\n      (newVal, oldVal) => {\r\n        let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n          return o.name === this.currentTabName\r\n        })\r\n        if (!this.editableTabsList[currentIndex]) {\r\n          return\r\n        }\r\n        if (\r\n          this.editableTabsList[currentIndex] &&\r\n          newVal.currentFactId ===\r\n            this.editableTabsList[currentIndex].contentForm.factConfirmId\r\n        ) {\r\n          if (\r\n            newVal.currentEvidenceFixedClassifyId ===\r\n            this.editableTabsList[currentIndex].contentForm\r\n              .evidenceFixedClassifyId\r\n          ) {\r\n            this.currentTabName = this.editableTabsList[currentIndex].name\r\n            this.step3SharedStore.setCurrentEvidenceIdAction(\r\n              this.editableTabsList[currentIndex].contentForm\r\n                .factConfirmEvidenceId\r\n            )\r\n          }\r\n        }\r\n      },\r\n      {\r\n        deep: true,\r\n        immediate: true\r\n      }\r\n    )\r\n  },\r\n  mounted() {\r\n    // 事件总线\r\n    if (window.eventEmitter) {\r\n      this.ee = window.eventEmitter\r\n    } else {\r\n      this.ee = window.eventEmitter = new EE()\r\n    }\r\n\r\n    if (!this.initEvidenceData || !this.initEvidenceData.length) {\r\n      this.addEvidenceTab()\r\n      return\r\n    }\r\n    this.editableTabsList = []\r\n    let tempArr = []\r\n    if (this.initEvidenceData.length > 1) {\r\n      this.closable = true\r\n    } else {\r\n      this.closable = false\r\n    }\r\n    _.forEach(this.initEvidenceData, o => {\r\n      tempArr.push({\r\n        title: '证据' + o.evidenceSort,\r\n        name: o.evidenceSort + '',\r\n        contentForm: {\r\n          // 调取cateBelongValue种类列表需要\r\n          evidenceFixedClassifyId: o.evidenceFixedClassifyId,\r\n          // 固定分类编号\r\n          evidenceClassifySort: this.sortNum,\r\n          // 证据种类\r\n          cateBelongValue: o.evidenceExtractTitle,\r\n          cateBelong: [],\r\n          // 摘录\r\n          evidenceExtract: o.evidenceExtractContent,\r\n          // 摘录来源\r\n          evidenceExtractSource: _.clone(\r\n            o.caseMgtFactConfirmEvidenceSourceVoList\r\n          ),\r\n          // 证实\r\n          evidenceVerification: o.evidenceApproveContent,\r\n          // 排序编号\r\n          evidenceSort: o.evidenceSort,\r\n          // 属于证据种类名称\r\n          evidenceFixedClassifyName: o.evidenceFixedClassifyName,\r\n          // 事实id\r\n          factConfirmId: this.factConfirmId,\r\n          // 证据id\r\n          factConfirmEvidenceId: o.factConfirmEvidenceId\r\n        }\r\n      })\r\n    })\r\n\r\n    this.editableTabsList = _.orderBy(tempArr, [\r\n      [\r\n        function(o) {\r\n          return o.name * 1\r\n        }\r\n      ],\r\n      ['asc']\r\n    ])\r\n\r\n    this.currentTabName = this.editableTabsList[0].name + ''\r\n\r\n    // 设置监听\r\n    if (typeof this.unwatchInCreated === 'function') {\r\n      this.unwatchInCreated()\r\n    }\r\n\r\n    this.unwatchInMounted = this.$watch(\r\n      'sharedState',\r\n      (newVal, oldVal) => {\r\n        let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n          return o.name === this.currentTabName\r\n        })\r\n        if (\r\n          this.editableTabsList[currentIndex] &&\r\n          newVal.currentFactId ===\r\n            this.editableTabsList[currentIndex].contentForm.factConfirmId\r\n        ) {\r\n          if (\r\n            newVal.currentEvidenceFixedClassifyId ===\r\n            this.editableTabsList[currentIndex].contentForm\r\n              .evidenceFixedClassifyId\r\n          ) {\r\n            this.currentTabName = this.editableTabsList[currentIndex].name\r\n            this.step3SharedStore.setCurrentEvidenceIdAction(\r\n              this.editableTabsList[currentIndex].contentForm\r\n                .factConfirmEvidenceId\r\n            )\r\n          }\r\n        }\r\n      },\r\n      {\r\n        deep: true,\r\n        immediate: true\r\n      }\r\n    )\r\n\r\n    this.$nextTick(() => {\r\n      if (this.$route.params.factConfirmEvidenceId) {\r\n        this.$nextTick(() => {\r\n          this.locateTab(this.$route.params.factConfirmEvidenceId)\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.evidence-item-tabs-wrap {\r\n  .el-tabs__active-bar.is-top {\r\n    width: 39px !important;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/EvidenceTabs.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-tabs',{ref:\"evidenceTabDom\",staticClass:\"evidence-item-tabs-wrap\",attrs:{\"closable\":_vm.closable},on:{\"tab-remove\":_vm.removeGrandTab,\"tab-click\":_vm.selectGrandTab},model:{value:(_vm.currentTabName),callback:function ($$v) {_vm.currentTabName=$$v},expression:\"currentTabName\"}},_vm._l((_vm.editableTabsList),function(grandItem){return _c('el-tab-pane',{key:grandItem.name,attrs:{\"label\":grandItem.title,\"name\":grandItem.name}},[_c('evidence-form',{attrs:{\"contentForm\":grandItem.contentForm}})],1)})),_vm._v(\" \"),_c('el-button',{staticClass:\"addBtn\",staticStyle:{\"right\":\"10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){_vm.addEvidenceTab()}}},[_c('i',{staticClass:\"iconfont\",staticStyle:{\"font-size\":\"16px\",\"font-weight\":\"bold\",\"color\":\"#42a0f8\"},attrs:{\"title\":\"新增证据\"}},[_vm._v(\"\")])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-6ac49456\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/EvidenceTabs.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6ac49456\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./EvidenceTabs.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceTabs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceTabs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6ac49456\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./EvidenceTabs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/EvidenceTabs.vue\n// module id = null\n// module chunks = ","<template>\r\n<div class=\"evidence-tabs-wrap\">\r\n            <el-tabs :tab-position=\"tabPosition\" type=\"card\" v-model=\"currentTabName\" @tab-click=\"selectEvidenceCateTab\">\r\n              <el-tab-pane\r\n        v-for=\"subItem in editableTabsList\"\r\n        :key=\"subItem.index\"\r\n        :label=\"subItem.title\"\r\n        :name=\"subItem.name\"\r\n      >\r\n      <span slot=\"label\" ref = \"triangleFlagDom\">{{subItem.title}}<i class=\"sanjiao\"  v-show=\"showTriangleFlag(subItem.caseMgtFactConfirmEvidenceVoList)\"></i></span>\r\n      <!--具体证据tabs 组件-->\r\n      <evidence-tabs :initEvidenceData=\"subItem.caseMgtFactConfirmEvidenceVoList\" :sortNum=\"subItem.name\" :cateId=\"subItem.cateId\" :cateName=\"subItem.cateName\" :factConfirmId=\"subItem.factConfirmId\"></evidence-tabs>\r\n      </el-tab-pane>\r\n            </el-tabs>\r\n</div>\r\n</template>\r\n<script>\r\nimport EvidenceTabs from './EvidenceTabs.vue'\r\nimport _ from 'lodash'\r\nimport EE from 'events'\r\n// step3 共享数据\r\nimport { store as step3SharedStore } from '@/utils/global-store'\r\n\r\nlet evidenceFormUpdateCb\r\nconst vm = {\r\n  props: ['initData'],\r\n  data() {\r\n    return {\r\n      // 是否可以关闭tab\r\n      closable: false,\r\n      currentTabName: 1 + '',\r\n      tabPosition: 'left',\r\n      editableTabsList: [],\r\n      // 共享状态数据\r\n      step3SharedStore: step3SharedStore,\r\n      sharedState: step3SharedStore.state\r\n    }\r\n  },\r\n  name: '',\r\n  computed: {},\r\n  components: {\r\n    EvidenceTabs\r\n  },\r\n  destroyed() {\r\n    this.unwatchInMounted()\r\n    this.ee.removeListener('evidenceFormUpdate', evidenceFormUpdateCb)\r\n  },\r\n  mounted() {\r\n    // 事件总线\r\n    if (window.eventEmitter) {\r\n      this.ee = window.eventEmitter\r\n    } else {\r\n      this.ee = window.eventEmitter = new EE()\r\n    }\r\n\r\n    if (this.$route.params.evidenceFixedClassifyId) {\r\n      this.$nextTick(() => {\r\n        this.locateTab(this.$route.params.evidenceFixedClassifyId)\r\n      })\r\n    }\r\n    this.editableTabsList = []\r\n    let tempArr = []\r\n    _.forEach(this.initData, o => {\r\n      let caseMgtFactConfirmEvidenceVoList = _.clone(\r\n        o.caseMgtFactConfirmEvidenceVoList\r\n      )\r\n      tempArr.push({\r\n        title: o.evidenceFixedClassifyName,\r\n        name: o.evidenceClassifySort + '',\r\n        cateId: o.evidenceFixedClassifyId,\r\n        cateName: o.evidenceFixedClassifyName,\r\n        caseMgtFactConfirmEvidenceVoList,\r\n        factConfirmId: o.factConfirmId,\r\n        contentForm: {}\r\n      })\r\n\r\n      this.editableTabsList = _.orderBy(\r\n        tempArr,\r\n        [\r\n          function(o) {\r\n            return o.name * 1\r\n          }\r\n        ],\r\n        ['asc']\r\n      )\r\n    })\r\n    // 初始化选中的cateId\r\n    let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n      return o.name === this.currentTabName\r\n    })\r\n    let cateId = this.editableTabsList[currentIndex].cateId\r\n    this.step3SharedStore.setCurrentEvidenceFixedClassifyIdAction(cateId)\r\n    // 设置监听\r\n    this.unwatchInMounted = this.$watch(\r\n      'sharedState',\r\n      (newVal, oldVal) => {\r\n        let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n          return o.name === this.currentTabName\r\n        })\r\n        if (\r\n          newVal.currentFactId ===\r\n          this.editableTabsList[currentIndex].factConfirmId\r\n        ) {\r\n          this.step3SharedStore.setCurrentEvidenceFixedClassifyIdAction(\r\n            this.editableTabsList[currentIndex].cateId\r\n          )\r\n        }\r\n      },\r\n      {\r\n        // deep: true,\r\n        immediate: true\r\n      }\r\n    )\r\n\r\n    evidenceFormUpdateCb = data => {\r\n      // console.log(this.initEvidenceData) // return undefined\r\n      // console.log(data)\r\n      let currentIndex = _.findIndex(this.editableTabsList, function(o) {\r\n        return (\r\n          o.cateId === data.evidenceFixedClassifyId &&\r\n          o.factConfirmId === data.factConfirmId\r\n        )\r\n      })\r\n\r\n      if (\r\n        this.$refs.triangleFlagDom &&\r\n        this.$refs.triangleFlagDom[currentIndex]\r\n      ) {\r\n        if (this.showTriangleFlag([data])) {\r\n          this.$refs.triangleFlagDom[currentIndex].querySelector(\r\n            'i'\r\n          ).style.display = 'block'\r\n        } else {\r\n          // fix bug4436\r\n          if (data.evidenceSort > 1) {\r\n            return\r\n          }\r\n          this.$refs.triangleFlagDom[currentIndex].querySelector(\r\n            'i'\r\n          ).style.display = 'none'\r\n        }\r\n      }\r\n    }\r\n    this.ee.addListener('evidenceFormUpdate', evidenceFormUpdateCb)\r\n  },\r\n  methods: {\r\n    // 判断是否展示tab上的三角符号，依据是大类下面有没有有效的证据\r\n    showTriangleFlag(data) {\r\n      let validEvidenceNum = 0\r\n      if (data.length >= 1) {\r\n        _.forEach(data, (value, key) => {\r\n          if (\r\n            value.evidenceApproveContent !== '' ||\r\n            value.evidenceExtractContent !== '' ||\r\n            value.evidenceExtractTitle !== ''\r\n          ) {\r\n            validEvidenceNum++\r\n          }\r\n        })\r\n        if (validEvidenceNum >= 1) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    locateTab(evidenceFixedClassifyId) {\r\n      let dataCopy = _.orderBy(\r\n        this.initData,\r\n        [\r\n          function(o) {\r\n            return o.evidenceClassifySort * 1\r\n          }\r\n        ],\r\n        ['asc']\r\n      )\r\n      let currentIndex = _.findIndex(dataCopy, o => {\r\n        return o.evidenceFixedClassifyId === evidenceFixedClassifyId\r\n      })\r\n\r\n      if (currentIndex >= 0) {\r\n        this.currentTabName = currentIndex + 1 + ''\r\n        this.step3SharedStore.setCurrentEvidenceFixedClassifyIdAction(\r\n          evidenceFixedClassifyId\r\n        )\r\n      }\r\n    },\r\n    selectEvidenceCateTab(tabInstance) {\r\n      // console.log(this.editableTabsList)\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === this.currentTabName\r\n      })\r\n      // console.log(this.editableTabsList[currentIndex])\r\n      // console.log(this.$refs.triangleFlagDom[currentIndex])\r\n      let cateId = this.editableTabsList[currentIndex].cateId\r\n      this.currentTabName = tabInstance.name\r\n      this.step3SharedStore.setCurrentEvidenceFixedClassifyIdAction(cateId)\r\n    }\r\n  }\r\n}\r\n\r\nexport default vm\r\n</script>\r\n<style lang=\"scss\" scoped>\r\ni.sanjiao {\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: -1px;\r\n  top: -1px;\r\n  width: 0px;\r\n  height: 0px;\r\n  border-color: transparent #42a0f8;\r\n  border-width: 0px 16px 16px 0px;\r\n  border-style: solid;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/EvidenceCategoryTabs.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"evidence-tabs-wrap\"},[_c('el-tabs',{attrs:{\"tab-position\":_vm.tabPosition,\"type\":\"card\"},on:{\"tab-click\":_vm.selectEvidenceCateTab},model:{value:(_vm.currentTabName),callback:function ($$v) {_vm.currentTabName=$$v},expression:\"currentTabName\"}},_vm._l((_vm.editableTabsList),function(subItem){return _c('el-tab-pane',{key:subItem.index,attrs:{\"label\":subItem.title,\"name\":subItem.name}},[_c('span',{ref:\"triangleFlagDom\",refInFor:true,attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(_vm._s(subItem.title)),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTriangleFlag(subItem.caseMgtFactConfirmEvidenceVoList)),expression:\"showTriangleFlag(subItem.caseMgtFactConfirmEvidenceVoList)\"}],staticClass:\"sanjiao\"})]),_vm._v(\" \"),_c('evidence-tabs',{attrs:{\"initEvidenceData\":subItem.caseMgtFactConfirmEvidenceVoList,\"sortNum\":subItem.name,\"cateId\":subItem.cateId,\"cateName\":subItem.cateName,\"factConfirmId\":subItem.factConfirmId}})],1)}))],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-17f22ce9\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/EvidenceCategoryTabs.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-17f22ce9\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./EvidenceCategoryTabs.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceCategoryTabs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./EvidenceCategoryTabs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-17f22ce9\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./EvidenceCategoryTabs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-17f22ce9\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/EvidenceCategoryTabs.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"step-wrap\" v-loading=\"loading\" id=\"step3\">\r\n    <!-- <pre>{{step3SharedStore.state}}</pre> -->\r\n    <el-tabs class=\"fact-tabs-wrap\" v-model=\"currentTabName\" :closable=\"closable\" @tab-remove=\"removeTab\" @tab-click=\"selectTab\">\r\n      <el-tab-pane\r\n        v-for=\"item in editableTabsList\"\r\n        :key=\"item.name\"\r\n        :label=\"item.title\"\r\n        :name=\"item.name\"\r\n      >\r\n      <div class=\"step-body-wrap\">\r\n        <el-form ref=\"form\" :label-position=\"labelPosition\" :model=\"item.contentForm\" label-width=\"80px\">\r\n        <el-row>\r\n          <h3 class=\"h3-title\" style=\"color:#333;font-size:14px;font-weight:400;margin-bottom:8px;line-height:1em;\">事实内容描述</h3>\r\n          <p style=\"margin-top:8px;margin-bottom:12px;line-height:1em;font-size:12px;color:#999;font-weight:400;\">温馨提示：系统会自动获取事实信息，你也可以手动编辑</p>\r\n          <el-form-item label=\"\">\r\n            <el-input type=\"textarea\" rows=\"3\" maxlength=\"2048\" v-model=\"item.contentForm.basicInfo\" @change=\"handleInputChange\"></el-input>\r\n          </el-form-item>\r\n        </el-row>\r\n        <el-row>\r\n          <h3 class=\"h3-title\" style=\"font-size:14px;color:#333;font-weight:400;line-height:1em;margin-bottom:12px;\">{{item.title}}的相关证据</h3>\r\n          <!--证据分类显示组件 -->\r\n          <!-- <pre>{{item.caseMgtEvidenceClassifyVoList}}</pre> -->\r\n          <evidence-category-tabs :initData=\"item.caseMgtEvidenceClassifyVoList\"></evidence-category-tabs>\r\n        </el-row>\r\n        </el-form>\r\n      </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n    <el-button class=\"addBtn\" type=\"text\" @click=\"addTab()\"><i class=\"iconfont\" title=\"新增事实\" style=\"font-size:16px;font-weight:bold;color:#42a0f8;\">&#xe6ed;</i></el-button>\r\n    <div class=\"step-footer-wrap\">\r\n      <!-- <el-button size=\"small\" @click=\"clearConfirmList\">清空数据</el-button>-->\r\n      <!-- <el-button size=\"small\" @click=\"compareSubmitDataWithInitData\">比较数据</el-button> -->\r\n      <el-button size=\"small\" @click=\"saveFactConfirmList(false)\">保存</el-button>\r\n      <el-button size=\"small\" @click=\"prev()\">上一步</el-button>\r\n      <el-button size=\"small\" type=\"primary\" @click=\"next()\">下一步</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  getFactConfirmListByCaseNumber,\r\n  getEvidenceCategory,\r\n  saveFactConfirmList,\r\n  getEvidenceKeywordsByCategoryId\r\n} from '@/api/root'\r\nimport _ from 'lodash'\r\nimport EE from 'events'\r\nimport { getUuid } from '@/utils/genUuid'\r\nimport { store as step3SharedStore } from '@/utils/global-store'\r\nimport EvidenceCategoryTabs from '../../../components/EvidenceCategoryTabs.vue'\r\n\r\nlet caseMgtFactConfirmVoList = []\r\nlet evidenceFormUpdateCb\r\nlet deleteEvidenceTabEventCb\r\n\r\nfunction isInEvidenceList(list, id) {\r\n  let bool = false\r\n  _.forEach(list, o => {\r\n    if (o.factConfirmEvidenceId === id) {\r\n      bool = true\r\n    }\r\n  })\r\n  return bool\r\n}\r\nexport default {\r\n  name: 'step3',\r\n  props: {\r\n    caseObj: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    EvidenceCategoryTabs\r\n  },\r\n  mounted() {\r\n    window.checkIsSave = (path, close) => {\r\n      this.next(path, close)\r\n    }\r\n    // 事件总线\r\n    if (window.eventEmitter) {\r\n      this.ee = window.eventEmitter\r\n    } else {\r\n      this.ee = window.eventEmitter = new EE()\r\n    }\r\n    if (this.$route.params.factConfirmId && this.$route.params.ocrFileId) {\r\n      this.$nextTick(() => {\r\n        this.locateTab(this.$route.params.factConfirmId)\r\n      })\r\n      // 切换pdf\r\n      this.ee.emit('switchPdfByOcrfileIdEvent', this.$route.params.ocrFileId)\r\n    }\r\n    // 获取事实全量数据（包括事实列表，证据分类，证据列表）\r\n    // 设置一个前置操作,确保两个接口完成数据读取\r\n    this.loading = true\r\n    if (this.step3SharedStore.hasSaved) {\r\n      this.loading = false\r\n      this.getData(this.step3SharedStore.step3AllDatas)\r\n      deleteEvidenceTabEventCb = data => {\r\n        // 同步待提交数据，即从现有数据中，删除掉对应事实下的对应证据\r\n        _.forEach(caseMgtFactConfirmVoList, o => {\r\n          if (o.factConfirmId === data.factConfirmId) {\r\n            _.forEach(o.caseMgtEvidenceClassifyVoList, value => {\r\n              if (\r\n                value.evidenceFixedClassifyId === data.evidenceFixedClassifyId\r\n              ) {\r\n                _.forEach(\r\n                  value.caseMgtFactConfirmEvidenceVoList,\r\n                  (val, index) => {\r\n                    if (\r\n                      val &&\r\n                      val.factConfirmEvidenceId === data.factConfirmEvidenceId\r\n                    ) {\r\n                      value.caseMgtFactConfirmEvidenceVoList.splice(index, 1)\r\n                      setTimeout(() => {\r\n                        _.forEach(caseMgtFactConfirmVoList, (value, index) => {\r\n                          _.forEach(\r\n                            value.caseMgtEvidenceClassifyVoList,\r\n                            (v, i) => {\r\n                              _.forEach(\r\n                                v.caseMgtFactConfirmEvidenceVoList,\r\n                                (val, idx) => {\r\n                                  val.evidenceSort = idx + 1\r\n                                }\r\n                              )\r\n                            }\r\n                          )\r\n                        })\r\n                      }, 0)\r\n                    }\r\n                  }\r\n                )\r\n              }\r\n            })\r\n          }\r\n        })\r\n        // 重排\r\n      }\r\n      // 监听事件\r\n      this.ee.addListener('deleteEvidenceTabEvent', deleteEvidenceTabEventCb)\r\n\r\n      evidenceFormUpdateCb = data => {\r\n        // v1.0 第一代算法\r\n        _.forEach(caseMgtFactConfirmVoList, o => {\r\n          if (o.factConfirmId === data.factConfirmId) {\r\n            _.forEach(o.caseMgtEvidenceClassifyVoList, o1 => {\r\n              if (o1.evidenceFixedClassifyId === data.evidenceFixedClassifyId) {\r\n                if (\r\n                  isInEvidenceList(\r\n                    o1.caseMgtFactConfirmEvidenceVoList,\r\n                    data.factConfirmEvidenceId\r\n                  )\r\n                ) {\r\n                  _.forEach(\r\n                    o1.caseMgtFactConfirmEvidenceVoList,\r\n                    (obj, index) => {\r\n                      if (\r\n                        obj.factConfirmEvidenceId === data.factConfirmEvidenceId\r\n                      ) {\r\n                        _.assign(\r\n                          o1.caseMgtFactConfirmEvidenceVoList[index],\r\n                          data\r\n                        )\r\n                      }\r\n                    }\r\n                  )\r\n                } else {\r\n                  if ('caseMgtFactConfirmEvidenceVoList' in o1) {\r\n                    if (_.isArray(o1.caseMgtFactConfirmEvidenceVoList)) {\r\n                      o1.caseMgtFactConfirmEvidenceVoList.push(data)\r\n                    } else {\r\n                      o1.caseMgtFactConfirmEvidenceVoList = [data]\r\n                    }\r\n                  } else {\r\n                    o1.caseMgtFactConfirmEvidenceVoList = [data]\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n      this.ee.addListener('evidenceFormUpdate', evidenceFormUpdateCb)\r\n    } else {\r\n      this.resolveInitData().then(resolveData => {\r\n        getFactConfirmListByCaseNumber({\r\n          caseNumber: this.caseObj.caseNumber\r\n        }).then(res => {\r\n          if (res.data.code === '200') {\r\n            if (\r\n              res.data.data.caseMgtFactConfirmVoList &&\r\n              res.data.data.caseMgtFactConfirmVoList.length === 0\r\n            ) {\r\n              // 无数据\r\n              // 初始化已有的事实数据(缺证据部分)\r\n              this.closable = false\r\n              this.addTab()\r\n              this.makeCaseMgtFactConfirmVoList()\r\n              this.loading = false\r\n              // setTimeout(() => {\r\n              // this.saveFactConfirmList(true)\r\n              // }, 0)\r\n              return\r\n            }\r\n            if (\r\n              res.data.data.caseMgtFactConfirmVoList &&\r\n              res.data.data.caseMgtFactConfirmVoList.length > 1\r\n            ) {\r\n              this.closable = true\r\n            }\r\n            this.getData(res.data.data.caseMgtFactConfirmVoList)\r\n            this.step3SharedStore.setHasSaved(true)\r\n            this.loading = false\r\n          } else {\r\n            if (res.data.msg) {\r\n              this.$message.error(res.data.msg)\r\n            } else {\r\n              this.$message.error('数据出错！')\r\n            }\r\n            this.makeCaseMgtFactConfirmVoList()\r\n            this.addTab()\r\n            this.step3SharedStore.setHasSaved(false)\r\n            this.loading = false\r\n          }\r\n          // setTimeout(() => {\r\n          // this.saveFactConfirmList(true)\r\n          // }, 0)\r\n        })\r\n\r\n        deleteEvidenceTabEventCb = data => {\r\n          // 同步待提交数据，即从现有数据中，删除掉对应事实下的对应证据\r\n          _.forEach(caseMgtFactConfirmVoList, o => {\r\n            if (o.factConfirmId === data.factConfirmId) {\r\n              _.forEach(o.caseMgtEvidenceClassifyVoList, value => {\r\n                if (\r\n                  value.evidenceFixedClassifyId === data.evidenceFixedClassifyId\r\n                ) {\r\n                  _.forEach(\r\n                    value.caseMgtFactConfirmEvidenceVoList,\r\n                    (val, index) => {\r\n                      if (\r\n                        val &&\r\n                        val.factConfirmEvidenceId === data.factConfirmEvidenceId\r\n                      ) {\r\n                        value.caseMgtFactConfirmEvidenceVoList.splice(index, 1)\r\n                        setTimeout(() => {\r\n                          _.forEach(\r\n                            caseMgtFactConfirmVoList,\r\n                            (value, index) => {\r\n                              _.forEach(\r\n                                value.caseMgtEvidenceClassifyVoList,\r\n                                (v, i) => {\r\n                                  _.forEach(\r\n                                    v.caseMgtFactConfirmEvidenceVoList,\r\n                                    (val, idx) => {\r\n                                      val.evidenceSort = idx + 1\r\n                                    }\r\n                                  )\r\n                                }\r\n                              )\r\n                            }\r\n                          )\r\n                        }, 0)\r\n                      }\r\n                    }\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n        // 监听事件\r\n        this.ee.addListener('deleteEvidenceTabEvent', deleteEvidenceTabEventCb)\r\n\r\n        evidenceFormUpdateCb = data => {\r\n          // v1.0 第一代算法\r\n          _.forEach(caseMgtFactConfirmVoList, o => {\r\n            if (o.factConfirmId === data.factConfirmId) {\r\n              _.forEach(o.caseMgtEvidenceClassifyVoList, o1 => {\r\n                if (\r\n                  o1.evidenceFixedClassifyId === data.evidenceFixedClassifyId\r\n                ) {\r\n                  if (\r\n                    isInEvidenceList(\r\n                      o1.caseMgtFactConfirmEvidenceVoList,\r\n                      data.factConfirmEvidenceId\r\n                    )\r\n                  ) {\r\n                    _.forEach(\r\n                      o1.caseMgtFactConfirmEvidenceVoList,\r\n                      (obj, index) => {\r\n                        if (\r\n                          obj.factConfirmEvidenceId ===\r\n                          data.factConfirmEvidenceId\r\n                        ) {\r\n                          _.assign(\r\n                            o1.caseMgtFactConfirmEvidenceVoList[index],\r\n                            data\r\n                          )\r\n                        }\r\n                      }\r\n                    )\r\n                  } else {\r\n                    if ('caseMgtFactConfirmEvidenceVoList' in o1) {\r\n                      if (_.isArray(o1.caseMgtFactConfirmEvidenceVoList)) {\r\n                        o1.caseMgtFactConfirmEvidenceVoList.push(data)\r\n                      } else {\r\n                        o1.caseMgtFactConfirmEvidenceVoList = [data]\r\n                      }\r\n                    } else {\r\n                      o1.caseMgtFactConfirmEvidenceVoList = [data]\r\n                    }\r\n                  }\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n        this.ee.addListener('evidenceFormUpdate', evidenceFormUpdateCb)\r\n      })\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      msg: 'step3',\r\n      // 是否可以关闭tab\r\n      closable: false,\r\n      currentTabName: 1 + '',\r\n      labelPosition: 'top',\r\n      // 先考虑有数据情况下的编辑，这里设置初始数据会有问题\r\n      editableTabsList: [],\r\n      // 共享状态数据\r\n      step3SharedStore: step3SharedStore,\r\n      // 是否加载中\r\n      loading: false\r\n    }\r\n  },\r\n\r\n  destroyed() {\r\n    this.ee.removeListener('deleteEvidenceTabEvent', deleteEvidenceTabEventCb)\r\n    this.ee.removeListener('evidenceFormUpdate', evidenceFormUpdateCb)\r\n  },\r\n  methods: {\r\n    getData(data) {\r\n      this.editableTabsList = []\r\n      _.forEach(data, o => {\r\n        let caseMgtEvidenceClassifyVoList = _.clone(\r\n          o.caseMgtEvidenceClassifyVoList\r\n        )\r\n        _.forEach(caseMgtEvidenceClassifyVoList, obj => {\r\n          if (!obj.caseMgtFactConfirmEvidenceVoList) {\r\n            obj.caseMgtFactConfirmEvidenceVoList = [\r\n              {\r\n                caseMgtFactConfirmEvidenceSourceVoList: [],\r\n                evidenceApproveContent: '',\r\n                evidenceExtractContent: '',\r\n                evidenceExtractTitle: '',\r\n                evidenceFixedClassifyId: obj.evidenceFixedClassifyId,\r\n                evidenceFixedClassifyName: obj.evidenceFixedClassifyName,\r\n                evidenceSort: 1,\r\n                factConfirmEvidenceId: 'E' + getUuid(8, 16),\r\n                factConfirmId: obj.factConfirmId\r\n              }\r\n            ]\r\n          }\r\n        })\r\n        this.editableTabsList.push({\r\n          title: o.factFindingTitle,\r\n          name: o.sort + '',\r\n          caseMgtEvidenceClassifyVoList,\r\n          factConfirmId: o.factConfirmId,\r\n          contentForm: {\r\n            // 事实内容描述\r\n            basicInfo: o.factFindingContent\r\n          }\r\n        })\r\n\r\n        this.currentTabName = this.editableTabsList[0].name + ''\r\n      })\r\n      if (this.editableTabsList.length > 1) {\r\n        this.closable = true\r\n      }\r\n      this.makeCaseMgtFactConfirmVoList()\r\n      this.timer = setInterval(() => {\r\n        if (!this.editableTabsList[this.currentTabName * 1 - 1]) {\r\n          return\r\n        }\r\n        clearInterval(this.timer)\r\n        // 初始化数据,设置当前选中事实的id,此处有bug to do\r\n        let factConfirmId = this.editableTabsList[this.currentTabName * 1 - 1]\r\n          .factConfirmId\r\n        this.step3SharedStore.setCurrentFactIdAction(factConfirmId)\r\n      }, 100)\r\n    },\r\n    // 前置方法，获取完本函数中的方法，才能初始化事实证据\r\n    resolveInitData() {\r\n      let p = new Promise((resolve, reject) => {\r\n        // 获取固定分类\r\n        getEvidenceCategory().then(res => {\r\n          if (res.data.code === '200') {\r\n            let arr = []\r\n            let subPromise = []\r\n            _.forEach(res.data.data, o1 => {\r\n              let temp = {}\r\n              temp.evidenceClassifySort = o1.sort\r\n              temp.evidenceFixedClassifyId = o1.classifyId\r\n              temp.evidenceFixedClassifyName = o1.classifyName\r\n              arr.push(temp)\r\n              // 循环调用固定分类下面的二级接口\r\n              subPromise.push(\r\n                new Promise((resolve, reject) => {\r\n                  getEvidenceKeywordsByCategoryId({\r\n                    evidenceFixedClassifyId: o1.classifyId\r\n                  }).then(response => {\r\n                    if (response.data.code === '200') {\r\n                      resolve(response.data.data)\r\n                      this.step3SharedStore.setEvidenceTitleCacheMapByKey(\r\n                        o1.classifyId,\r\n                        response.data.data\r\n                      )\r\n                    } else {\r\n                      reject(response.data.msg)\r\n                    }\r\n                  })\r\n                })\r\n              )\r\n            })\r\n            Promise.all(subPromise).then(resolveData => {\r\n              resolve(resolveData)\r\n            })\r\n            this.step3SharedStore.setCaseMgtEvidenceClassifyVoList(arr)\r\n          } else {\r\n            reject(res.data.msg)\r\n          }\r\n        })\r\n      })\r\n      return p\r\n    },\r\n    // 事实表单,事实内容描述字段发生了变化，响应事件\r\n    handleInputChange(newVal) {\r\n      _.forEach(caseMgtFactConfirmVoList, o => {\r\n        if (o.sort === this.currentTabName) {\r\n          o.factFindingContent = newVal\r\n        }\r\n      })\r\n    },\r\n    // 组装事实数组\r\n    makeCaseMgtFactConfirmVoList() {\r\n      caseMgtFactConfirmVoList = []\r\n      _.forEach(this.editableTabsList, o => {\r\n        let temp = {}\r\n        temp.factFindingContent = o.contentForm.basicInfo\r\n        temp.factFindingTitle = o.title\r\n        temp.factConfirmId = o.factConfirmId\r\n        temp.sort = o.name\r\n        temp.caseMgtEvidenceClassifyVoList = o.caseMgtEvidenceClassifyVoList\r\n        caseMgtFactConfirmVoList.push(temp)\r\n      })\r\n      // 保存初始化的结果\r\n      this.step3SharedStore.setStep3AllDatas(_.clone(caseMgtFactConfirmVoList))\r\n    },\r\n    next(path, close) {\r\n      if (this.compareSubmitDataWithInitData()) {\r\n        this.$confirm('有修改的事实认定未保存, 是否保存?', '', {\r\n          confirmButtonText: '保存',\r\n          cancelButtonText: '取消',\r\n          closeOnClickModal: false,\r\n          center: true,\r\n          showClose: false\r\n        })\r\n          .then(() => {\r\n            this.saveFactConfirmList(undefined, path, close)\r\n          })\r\n          .catch(() => {\r\n            if (close) {\r\n              if (eDossier) {\r\n                eDossier.close()\r\n              }\r\n            } else {\r\n              if (path) {\r\n                this.$router.push({ path: path })\r\n              } else {\r\n                this.step3SharedStore.setHasSaved(false)\r\n                this.$router.push({ name: 'step4' })\r\n              }\r\n            }\r\n          })\r\n      } else {\r\n        if (close) {\r\n          if (eDossier) {\r\n            eDossier.close()\r\n          }\r\n        } else {\r\n          if (path) {\r\n            this.$router.push({ path: path })\r\n          } else {\r\n            this.step3SharedStore.setHasSaved(true)\r\n            this.$router.push({ name: 'step4' })\r\n          }\r\n        }\r\n      }\r\n    },\r\n    prev() {\r\n      if (this.compareSubmitDataWithInitData()) {\r\n        this.$confirm('有修改的事实认定未保存, 是否保存?', '', {\r\n          confirmButtonText: '保存',\r\n          cancelButtonText: '取消',\r\n          closeOnClickModal: false,\r\n          center: true,\r\n          showClose: false\r\n        })\r\n          .then(() => {\r\n            this.saveFactConfirmList()\r\n          })\r\n          .catch(() => {\r\n            this.step3SharedStore.setHasSaved(false)\r\n            this.$router.push({ name: 'step2' })\r\n          })\r\n      } else {\r\n        this.step3SharedStore.setHasSaved(true)\r\n        this.$router.push({ name: 'step2' })\r\n      }\r\n    },\r\n    // 根据事实id，跳转到对应的tab\r\n    locateTab(factConfirmId) {\r\n      let currentIndex = _.findIndex(this.step3SharedStore.step3AllDatas, o => {\r\n        return o.factConfirmId === factConfirmId\r\n      })\r\n      if (currentIndex >= 0) {\r\n        this.currentTabName = currentIndex + 1 + ''\r\n        this.step3SharedStore.setCurrentFactIdAction(factConfirmId)\r\n      }\r\n    },\r\n    // 事实tabs::选中某个tab\r\n    selectTab(tabInstance) {\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === tabInstance.name\r\n      })\r\n      let factConfirmId = this.editableTabsList[currentIndex].factConfirmId\r\n      this.currentTabName = tabInstance.name\r\n      this.step3SharedStore.setCurrentFactIdAction(factConfirmId)\r\n    },\r\n    // 事实tabs::增加事实\r\n    addTab() {\r\n      this.closable = false\r\n      if (this.editableTabsList.length > 0) {\r\n        this.closable = true\r\n      }\r\n      let newFactID = 'F' + getUuid(8, 16)\r\n\r\n      let caseMgtEvidenceClassifyVoList = []\r\n      _.forEach(this.step3SharedStore.caseMgtEvidenceClassifyVoList, o => {\r\n        let temp = {}\r\n        temp.evidenceClassifySort = o.evidenceClassifySort\r\n        temp.evidenceFixedClassifyId = o.evidenceFixedClassifyId\r\n        temp.evidenceFixedClassifyName = o.evidenceFixedClassifyName\r\n        temp.factConfirmId = newFactID\r\n        caseMgtEvidenceClassifyVoList.push(temp)\r\n      })\r\n      let newTabName\r\n      if (this.editableTabsList.length === 0) {\r\n        newTabName = this.editableTabsList.length + 1\r\n      } else {\r\n        newTabName =\r\n          _.maxBy(this.editableTabsList, o => {\r\n            return o.name * 1\r\n          })['name'] *\r\n            1 +\r\n          1\r\n      }\r\n\r\n      // console.log(caseMgtEvidenceClassifyVoList)\r\n      this.editableTabsList.push({\r\n        title: '事实' + newTabName,\r\n        name: newTabName + '',\r\n        caseMgtEvidenceClassifyVoList,\r\n        factConfirmId: newFactID,\r\n        contentForm: {\r\n          basicInfo: ''\r\n        }\r\n      })\r\n      this.currentTabName = newTabName + ''\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === newTabName + ''\r\n      })\r\n      let tempArr = _.clone(\r\n        this.editableTabsList[currentIndex].caseMgtEvidenceClassifyVoList\r\n      )\r\n      _.forEach(tempArr, o => {\r\n        o.caseMgtFactConfirmEvidenceVoList = []\r\n      })\r\n      caseMgtFactConfirmVoList.push({\r\n        caseMgtEvidenceClassifyVoList: tempArr,\r\n        factConfirmId: newFactID,\r\n        factFindingContent: '',\r\n        factFindingTitle: '事实' + newTabName,\r\n        sort: newTabName + ''\r\n      })\r\n      // 手工增加tab时候/程序当做api直接调用的时候 设置当前事实id\r\n      this.step3SharedStore.setCurrentFactIdAction(newFactID)\r\n      // bug4024\r\n      // 重排\r\n      _.forEach(this.editableTabsList, (value, index) => {\r\n        this.editableTabsList[index].title = `事实${index + 1}`\r\n      })\r\n      _.forEach(caseMgtFactConfirmVoList, (value, index) => {\r\n        value.factFindingTitle = '事实' + (index + 1)\r\n      })\r\n\r\n      // console.log(this.editableTabsList)\r\n    },\r\n\r\n    // 事实tabs::删除事实\r\n    removeTab(targetName) {\r\n      let tabs = this.editableTabsList\r\n      if (tabs.length === 2) {\r\n        this.closable = false\r\n      }\r\n      let activeName = this.currentTabName\r\n      if (activeName === targetName) {\r\n        tabs.forEach((tab, index) => {\r\n          if (tab.name === targetName) {\r\n            let nextTab = tabs[index + 1] || tabs[index - 1]\r\n            if (nextTab) {\r\n              activeName = nextTab.name\r\n            }\r\n          }\r\n        })\r\n      }\r\n      this.currentTabName = activeName\r\n      // 重新设置当前的事实id\r\n      let currentIndex = _.findIndex(this.editableTabsList, o => {\r\n        return o.name === this.currentTabName\r\n      })\r\n      let factConfirmId = this.editableTabsList[currentIndex].factConfirmId\r\n      this.step3SharedStore.setCurrentFactIdAction(factConfirmId)\r\n      this.editableTabsList = tabs.filter(tab => tab.name !== targetName)\r\n      // 删除预提交数据模型中对应的记录\r\n      _.forEach(caseMgtFactConfirmVoList, (o, index) => {\r\n        if (o && o.sort === targetName) {\r\n          caseMgtFactConfirmVoList.splice(index, 1)\r\n        }\r\n      })\r\n      _.forEach(this.editableTabsList, (value, index) => {\r\n        this.editableTabsList[index].title = `事实${index + 1}`\r\n      })\r\n      _.forEach(caseMgtFactConfirmVoList, (value, index) => {\r\n        value.factFindingTitle = '事实' + (index + 1)\r\n      })\r\n    },\r\n\r\n    // 保存事实列表（包括事实、证据分类及证据）\r\n    saveFactConfirmList(silent, path, close) {\r\n      let caseMgtFactConfirmVoListCopy = _.cloneDeep(caseMgtFactConfirmVoList)\r\n      // 按照后台要求删除不必要字段\r\n      // 迭代事实数组\r\n      _.forEach(caseMgtFactConfirmVoListCopy, obj0 => {\r\n        delete obj0.factConfirmId\r\n        // 迭代证据固定分类数组\r\n        _.forEach(obj0.caseMgtEvidenceClassifyVoList, obj1 => {\r\n          delete obj1.factConfirmId\r\n          // 没有除数组以外的多余字段\r\n          // 迭代具体证据数组\r\n          _.forEach(obj1.caseMgtFactConfirmEvidenceVoList, obj2 => {\r\n            delete obj2.factConfirmId\r\n            delete obj2.factConfirmEvidenceId\r\n            delete obj2.evidenceClassifySort\r\n            // 证据摘录来源\r\n            obj2.caseMgtFactConfirmEvidenceSourceVoList = _.clone(\r\n              obj2.caseMgtFactConfirmEvidenceSourceVoList\r\n            )\r\n          })\r\n        })\r\n      })\r\n\r\n      saveFactConfirmList({\r\n        caseMgtFactConfirmVoList: caseMgtFactConfirmVoListCopy,\r\n        caseNumber: this.caseObj.caseNumber\r\n      }).then(res => {\r\n        if (res.data.code === '200') {\r\n          this.step3SharedStore.setHasSaved(true)\r\n          // 记录上一次保存成功的数据\r\n          let copy = _.clone(caseMgtFactConfirmVoList)\r\n          // console.log(copy)\r\n          _.forEach(copy, (o1, idx) => {\r\n            o1.sort = idx + 1 + ''\r\n            _.forEach(o1.caseMgtEvidenceClassifyVoList, o2 => {\r\n              _.forEach(o2.caseMgtFactConfirmEvidenceVoList, (o3, index) => {\r\n                o3.evidenceSort = index + 1\r\n              })\r\n            })\r\n          })\r\n          this.step3SharedStore.setStep3AllDatas(copy)\r\n          if (!silent) {\r\n            this.$message({\r\n              showClose: false,\r\n              message: '保存成功',\r\n              type: 'success'\r\n            })\r\n          }\r\n          if (close) {\r\n            if (eDossier) {\r\n              eDossier.close()\r\n            }\r\n          } else {\r\n            if (path) {\r\n              this.$router.push({ path: path })\r\n            }\r\n          }\r\n        } else {\r\n          if (res.data.msg) {\r\n            this.$message.error(res.data.msg)\r\n          } else {\r\n            this.$message.error('数据出错！')\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    // 清空数据,下面的动作，达不到清空数据的目的\r\n    clearConfirmList() {\r\n      saveFactConfirmList({\r\n        caseMgtFactConfirmVoList: [],\r\n        caseNumber: this.caseObj.caseNumber\r\n      }).then(res => {\r\n        if (res.data.code === '200') {\r\n          this.step3SharedStore.setHasSaved(true)\r\n          // 清空页面上的表单内容\r\n          caseMgtFactConfirmVoList = []\r\n          // 记录上一次保存成功的数据\r\n          this.step3SharedStore.setStep3AllDatas([])\r\n          this.editableTabsList = []\r\n          this.addTab()\r\n          this.$message({\r\n            showClose: false,\r\n            message: '数据已清空',\r\n            type: 'success'\r\n          })\r\n        } else {\r\n          if (res.data.msg) {\r\n            this.$message.error(res.data.msg)\r\n          } else {\r\n            this.$message.error('数据出错！')\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    // 比较初始化的是的数据快照；与提交前的数据快照是否一致，一致，则没有做修改；不一致则做了修改，提醒用户保存\r\n    compareSubmitDataWithInitData() {\r\n      let caseMgtFactConfirmVoListCopy = _.clone(caseMgtFactConfirmVoList)\r\n      // 对copy的两个地方做排序，事实排序，证据排序\r\n      _.forEach(caseMgtFactConfirmVoListCopy, (o1, idx) => {\r\n        o1.sort = idx + 1 + ''\r\n        _.forEach(o1.caseMgtEvidenceClassifyVoList, o2 => {\r\n          _.forEach(o2.caseMgtFactConfirmEvidenceVoList, (o3, index) => {\r\n            o3.evidenceSort = index + 1\r\n          })\r\n        })\r\n      })\r\n\r\n      _.forEach(caseMgtFactConfirmVoListCopy, o => {\r\n        _.forEach(o.caseMgtEvidenceClassifyVoList, o1 => {\r\n          _.forEach(o1.caseMgtFactConfirmEvidenceVoList, o2 => {\r\n            delete o2.evidenceClassifySort\r\n          })\r\n        })\r\n      })\r\n\r\n      let tempArr = _.clone(this.step3SharedStore.step3AllDatas)\r\n\r\n      _.forEach(tempArr, o => {\r\n        _.forEach(o.caseMgtEvidenceClassifyVoList, o1 => {\r\n          _.forEach(o1.caseMgtFactConfirmEvidenceVoList, o2 => {\r\n            // 如果没有此属性，静默失败\r\n            delete o2.evidenceClassifySort\r\n          })\r\n        })\r\n      })\r\n\r\n      // console.log(JSON.stringify(tempArr))\r\n      // console.log(JSON.stringify(caseMgtFactConfirmVoListCopy))\r\n\r\n      let isEqual = _.isEqual(\r\n        JSON.parse(JSON.stringify(tempArr)),\r\n        JSON.parse(JSON.stringify(caseMgtFactConfirmVoListCopy))\r\n      )\r\n      if (\r\n        tempArr.length &&\r\n        tempArr[0].caseMgtEvidenceClassifyVoList[0]\r\n          .caseMgtFactConfirmEvidenceVoList.length === 0\r\n      ) {\r\n        // this.step3SharedStore.setStep3AllDatas(caseMgtFactConfirmVoListCopy)\r\n        isEqual = true\r\n      }\r\n      return !isEqual\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n#step3 {\r\n  .addBtn {\r\n    span {\r\n      left: 19px;\r\n    }\r\n  }\r\n  .el-form--label-top {\r\n    .el-form-item {\r\n      margin-bottom: 24px;\r\n      .el-form-item__label {\r\n        line-height: 1em;\r\n        padding: 0 !important;\r\n        margin-bottom: 12px;\r\n        font-size: 14px;\r\n        color: #333;\r\n        font-weight: 400;\r\n      }\r\n    }\r\n  }\r\n\r\n  > .fact-tabs-wrap.el-tabs {\r\n    > .el-tabs__header {\r\n      padding-left: 24px;\r\n\r\n      > .el-tabs__nav {\r\n        padding: 0 8px;\r\n      }\r\n\r\n      > .el-tabs__active-bar {\r\n        padding: 0 8px;\r\n      }\r\n\r\n      .el-tabs__item {\r\n        color: #333;\r\n        font-weight: 600;\r\n        &:hover,\r\n        &.is-active {\r\n          color: #42a0f8;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .evidence-tabs-wrap {\r\n    > .el-tabs {\r\n      > .el-tabs__header {\r\n        padding-left: 0;\r\n        padding-right: 6px;\r\n        .el-tabs__item {\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          color: #666;\r\n          font-size: 14px;\r\n          font-weight: 400;\r\n          padding: 12px 12px;\r\n          &:hover,\r\n          &.is-active {\r\n            color: #fff;\r\n            background-color: #42a0f8;\r\n            border-color: #42a0f8 !important;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .evidence-item-tabs-wrap {\r\n    border: none;\r\n    border-left: 1px solid #ddd;\r\n    border-right: 1px solid #ddd;\r\n    border-bottom: 1px solid #ddd;\r\n    > .el-tabs__nav {\r\n      height: 47px;\r\n    }\r\n    > .el-tabs__content {\r\n      border-left: none;\r\n      border-right: none;\r\n    }\r\n    > .el-tabs__header {\r\n      padding-left: 16px;\r\n      .el-tabs__item {\r\n        color: #333;\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        margin-bottom: 0;\r\n        &:hover,\r\n        &.is-active {\r\n          color: #42a0f8;\r\n          background-color: transparent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &.step-wrap {\r\n    .step-body-wrap {\r\n      padding: 24px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/modules/caseHandle/step3/step3.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"step-wrap\",attrs:{\"id\":\"step3\"}},[_c('el-tabs',{staticClass:\"fact-tabs-wrap\",attrs:{\"closable\":_vm.closable},on:{\"tab-remove\":_vm.removeTab,\"tab-click\":_vm.selectTab},model:{value:(_vm.currentTabName),callback:function ($$v) {_vm.currentTabName=$$v},expression:\"currentTabName\"}},_vm._l((_vm.editableTabsList),function(item){return _c('el-tab-pane',{key:item.name,attrs:{\"label\":item.title,\"name\":item.name}},[_c('div',{staticClass:\"step-body-wrap\"},[_c('el-form',{ref:\"form\",refInFor:true,attrs:{\"label-position\":_vm.labelPosition,\"model\":item.contentForm,\"label-width\":\"80px\"}},[_c('el-row',[_c('h3',{staticClass:\"h3-title\",staticStyle:{\"color\":\"#333\",\"font-size\":\"14px\",\"font-weight\":\"400\",\"margin-bottom\":\"8px\",\"line-height\":\"1em\"}},[_vm._v(\"事实内容描述\")]),_vm._v(\" \"),_c('p',{staticStyle:{\"margin-top\":\"8px\",\"margin-bottom\":\"12px\",\"line-height\":\"1em\",\"font-size\":\"12px\",\"color\":\"#999\",\"font-weight\":\"400\"}},[_vm._v(\"温馨提示：系统会自动获取事实信息，你也可以手动编辑\")]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":\"3\",\"maxlength\":\"2048\"},on:{\"change\":_vm.handleInputChange},model:{value:(item.contentForm.basicInfo),callback:function ($$v) {_vm.$set(item.contentForm, \"basicInfo\", $$v)},expression:\"item.contentForm.basicInfo\"}})],1)],1),_vm._v(\" \"),_c('el-row',[_c('h3',{staticClass:\"h3-title\",staticStyle:{\"font-size\":\"14px\",\"color\":\"#333\",\"font-weight\":\"400\",\"line-height\":\"1em\",\"margin-bottom\":\"12px\"}},[_vm._v(_vm._s(item.title)+\"的相关证据\")]),_vm._v(\" \"),_c('evidence-category-tabs',{attrs:{\"initData\":item.caseMgtEvidenceClassifyVoList}})],1)],1)],1)])})),_vm._v(\" \"),_c('el-button',{staticClass:\"addBtn\",attrs:{\"type\":\"text\"},on:{\"click\":function($event){_vm.addTab()}}},[_c('i',{staticClass:\"iconfont\",staticStyle:{\"font-size\":\"16px\",\"font-weight\":\"bold\",\"color\":\"#42a0f8\"},attrs:{\"title\":\"新增事实\"}},[_vm._v(\"\")])]),_vm._v(\" \"),_c('div',{staticClass:\"step-footer-wrap\"},[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.saveFactConfirmList(false)}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.prev()}}},[_vm._v(\"上一步\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.next()}}},[_vm._v(\"下一步\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-5b2eae5e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/caseHandle/step3/step3.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5b2eae5e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./step3.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./step3.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./step3.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5b2eae5e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./step3.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/caseHandle/step3/step3.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}